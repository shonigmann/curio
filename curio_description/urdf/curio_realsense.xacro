<?xml version="1.0" ?>
<!-- 
    Software License Agreement (BSD-3-Clause)

    Copyright (c) 2019 Rhys Mainwaring
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met -

    1.  Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

    2.  Redistributions in binary form must reproduce the above
        copyright notice, this list of conditions and the following
        disclaimer in the documentation and/or other materials provided
        with the distribution.

    3.  Neither the name of the copyright holder nor the names of its
        contributors may be used to endorse or promote products derived
        from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
-->

<!--  xacro macros for laser sensor (rplidar_a1) -->
<robot name="curio_realsense" xmlns:xacro="http://ros.org/wiki/xacro">

    <!--    D435i Stereo Camera and IMU    -->
    <xacro:macro name="realsense_d435i" params="x y z parent='body_mast_link'">
        <link name="camera_frame"/>
        <joint name="camera_frame_joint" type="fixed">
            <origin rpy="0 0 ${math_pi}" xyz="${x} ${y} ${z}"/>
            <parent link="${parent}" />
            <child link="camera_frame" />
        </joint>

        <xacro:arg name="use_nominal_extrinsics" default="true" />
        <xacro:include filename="$(find realsense2_description)/urdf/_d435i.urdf.xacro"/>

        <xacro:sensor_d435i parent="camera_frame" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:sensor_d435i>

        <!--        ADD SIMULATED IMU -->
        <gazebo reference="camera_accel_frame">
            <gravity>true</gravity>
            <sensor name="imu_sensor" type="imu">
                <always_on>true</always_on>
                <update_rate>200</update_rate>
                <visualize>false</visualize>
                <topic>__default_topic__</topic>
<!--                TODO - CORRECT VALUES TO MATCH D435i IMU SPECS -->
                <imu>
                    <angular_velocity>
                        <x>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </z>
                    </angular_velocity>
                    <linear_acceleration>
                        <x>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </z>
                    </linear_acceleration>
                </imu>
                <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                    <topic_name>imu</topic_name>
                    <frame_name>camera_accel_frame</frame_name>
                    <initial_orientation_as_reference>false</initial_orientation_as_reference>
                    <ros>
                        <argument>--ros-args --remap ~/out:=imu</argument>
                    </ros>
                </plugin>
                <pose>0 0 0 0 0 0</pose>
            </sensor>
        </gazebo>

        <!--        ADD SIMULATED DEPTH CAMERA -->
        <gazebo reference="camera_depth_frame">
            <sensor type="depth" name="d435i">
                <update_rate>30</update_rate>
                <visualize>true</visualize>
                <camera name="d435i">
                    <horizontal_fov>1.047</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>B8G8R8</format>
                    </image>
                    <depth_camera>
                    </depth_camera>
                    <clip>
                        <near>0.1</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
                             That pixel's noise value is added to each of its color
                             channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>

                <plugin name="plugin_name" filename="libgazebo_ros_camera.so">
                    <ros>
                        <!--                        <namespace></namespace>-->
<!--                        <argument>custom_camera/image_raw:=realsense/image_raw</argument>-->
<!--                        <argument>custom_camera/image_depth:=realsense/image_depth</argument>-->
<!--                        <argument>custom_camera/camera_info:=realsense/camera_info</argument>-->
<!--                        <argument>custom_camera/camera_info_depth:=realsense/camera_info_depth</argument>-->
<!--                        <argument>custom_camera/points:=realsense/points</argument>-->
                    </ros>

                    <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
<!--                    <frame_name>camera_depth_frame</frame_name>-->
                    <hack_baseline>0.07</hack_baseline>
                    <min_depth>0.02</min_depth>
                </plugin>
            </sensor>
        </gazebo>

    </xacro:macro>

    <!--    L515 LIDAR, Camera, and IMU    -->
    <!--    D435i Stereo Camera and IMU    -->
    <xacro:macro name="realsense_l515" params="x y z parent='body_mast_link'">
        <link name="camera_frame"/>
        <joint name="camera_frame_joint" type="fixed">
            <origin rpy="0 0 ${math_pi}" xyz="${x} ${y} ${z}"/>
            <parent link="${parent}" />
            <child link="camera_frame" />
        </joint>

        <link name="imu_frame"/>
        <joint name="imu_frame_joint" type="fixed">
            <origin rpy="0 0 0" xyz="-0.012978 0.0025613 0.0041014"/>
            <parent link="camera_color_frame" />
            <child link="imu_frame" />
        </joint>

        <xacro:arg name="use_nominal_extrinsics" default="true" />
        <xacro:arg name="add_plug" default="false" />
        <xacro:include filename="$(find realsense2_description)/urdf/_l515.urdf.xacro" />
        <xacro:sensor_l515 parent="camera_frame" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:sensor_l515>

        <!--        ADD SIMULATED IMU -->
        <gazebo reference="imu_frame">
            <gravity>true</gravity>
            <sensor name="imu_sensor" type="imu">
                <imu>
                    <angular_velocity>
                        <x>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.00488</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.01</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.0058</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0.01466</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>3600</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>6.981317e-5</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </z>
                    </angular_velocity>
                    <linear_acceleration>
                        <x>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </x>
                        <y>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </y>
                        <z>
                            <noise type="gaussian_quantized">
                                <mean>0</mean>  <!-- gaussian noise mean value -->
                                <stddev>0.024</stddev>  <!-- gaussian noise standard deviation -->
                                <bias_mean>0.6</bias_mean>  <!-- gaussian noise mean applied to sensor bias -->
                                <bias_stddev>0.2</bias_stddev>  <!-- gaussian noise standard deviation applied to sensor bias -->
                                <dynamic_bias_stddev>0</dynamic_bias_stddev>  <!-- standard deviation of the noise used to drive a process to model the slow variations in sensor bias-->
                                <dynamic_bias_correlation_time>0</dynamic_bias_correlation_time>  <!-- the correlation time used to drive a process to model the slow variations in sensor bias. a typical value could be 3600 (1hr)-->
                                <precision>0.000981</precision>  <!-- for quantized noise, the precision of the measurement. 0 implies infinite precision -->
                            </noise>
                        </z>
                    </linear_acceleration>
                </imu>
                <always_on>true</always_on>
                <update_rate>200</update_rate>
                <visualize>false</visualize>
                <topic>__default_topic__</topic>
                <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                    <frame_name>imu_frame</frame_name>
                    <initial_orientation_as_reference>false</initial_orientation_as_reference>
                    <ros>
                        <argument>--ros-args --remap ~/out:=imu</argument>
                    </ros>
                </plugin>
                <pose>0 0 0 0 0 0</pose>
            </sensor>
        </gazebo>

        <!--        ADD SIMULATED DEPTH CAMERA -->
        <gazebo reference="camera_depth_frame">
            <sensor type="depth" name="l515">
                <update_rate>30</update_rate>
                <visualize>false</visualize>
                <camera name="l515">
                    <horizontal_fov>1.047</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>B8G8R8</format>
                    </image>
                    <depth_camera>
                    </depth_camera>
                    <clip>
                        <near>0.1</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.
                             That pixel's noise value is added to each of its color
                             channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>

                <plugin name="plugin_name" filename="libgazebo_ros_camera.so">

                    <ros>
                        <!--                        <namespace></namespace>-->
                        <argument>custom_camera/image_raw:=realsense/image_raw</argument>
                        <argument>custom_camera/image_depth:=realsense/image_depth</argument>
                        <argument>custom_camera/camera_info:=realsense/camera_info</argument>
                        <argument>custom_camera/camera_info_depth:=realsense/camera_info_depth</argument>
                        <argument>custom_camera/points:=realsense/points</argument>
                    </ros>

                    <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
                    <frame_name>camera_depth_frame</frame_name>
                    <hack_baseline>0.055</hack_baseline>
                    <min_depth>0.02</min_depth>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>
</robot>
